{"version":3,"sources":["Input.js","Output.js","convertToRoman.js","convertFromRoman.js","index.js"],"names":["ConvertInput","props","className","onChange","maxLength","ConvertOutput","value","convertToRoman","num","numberArr","RomanArr","result","findElement","e","nextHighest","find","push","indexOf","join","convertFromRoman","str","roman","I","V","X","L","C","D","M","i","length","curr","App","state","output","handleInput","bind","this","setState","target","React","Component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"kOAYeA,MAVf,SAAsBC,GACpB,OACE,2BACEC,UAAU,QACVC,SAAUF,EAAME,SAChBC,UAAU,OCKDC,MARf,SAAuBJ,GACrB,OACE,yBAAKC,UAAU,UACb,4BAAKD,EAAMK,SC2BAC,MAlCjB,SAAwBC,GAuBpB,IAtBA,IAAIC,EAAY,CAAC,IAAM,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAChEC,EAAW,CACb,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,KAEEC,EAAS,GAEPC,EAAc,SAAAC,GAClB,OAAOA,GAAKL,GAGPA,EAAM,GAAG,CACd,IAAIM,EAAcL,EAAUM,KAAKH,GAEjCD,EAAOK,KAAKN,EAASD,EAAUQ,QAAQH,KACvCN,GAAOM,EAIT,OAFgBH,EAAOO,KAAK,KCjBfC,MAZjB,SAA2BC,GAInB,IAFA,IAAMC,EAAQ,CAAEC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAAIC,EAAG,GAAIC,EAAG,IAAKC,EAAG,IAAKC,EAAG,KACzDpB,EAAM,EACDqB,EAAI,EAAGA,EAAIT,EAAIU,OAAQD,IAAK,CACnC,IAAME,EAAOV,EAAMD,EAAIS,IAEtBE,EADYV,EAAMD,EAAIS,EAAI,IACVrB,GAAOuB,EAASvB,GAAOuB,EAE1C,OAAOvB,GCATwB,G,wDACJ,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,OAAQ,IAEV,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBALP,E,wDASFvB,GACVwB,KAAKC,SAAS,CACZJ,OAAQ3B,EAAeM,EAAE0B,OAAOjC,QAAUa,EAAiBN,EAAE0B,OAAOjC,W,+BAKtE,OACE,yBAAKJ,UAAU,iBACb,wBAAIA,UAAU,SAAd,2BACA,kBAAC,EAAD,CAAcC,SAAUkC,KAAKF,cAC7B,kBAAC,EAAD,CAAe7B,MAAO+B,KAAKJ,MAAMC,c,GArBvBM,IAAMC,YA2BlBC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,kBAAC,EAAD,MAASJ,I","file":"static/js/main.872b8aa7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction ConvertInput(props) {\r\n  return (\r\n    <input\r\n      className=\"input\"\r\n      onChange={props.onChange}\r\n      maxLength=\"4\"\r\n    />\r\n  );\r\n}\r\n\r\nexport default ConvertInput;\r\n","import React from \"react\";\r\n\r\n\r\n\r\nfunction ConvertOutput(props) {\r\n  return (\r\n    <div className=\"output\">\r\n      <h2>{props.value}</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ConvertOutput;\r\n","function convertToRoman(num) {\r\n    let numberArr = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\r\n    let RomanArr = [\r\n      \"M\",\r\n      \"CM\",\r\n      \"D\",\r\n      \"CD\",\r\n      \"C\",\r\n      \"XC\",\r\n      \"L\",\r\n      \"XL\",\r\n      \"X\",\r\n      \"IX\",\r\n      \"V\",\r\n      \"IV\",\r\n      \"I\"\r\n    ];\r\n    let result = [];\r\n  \r\n    const findElement = e => {\r\n      return e <= num;\r\n    };\r\n  \r\n    while (num > 0) {\r\n      let nextHighest = numberArr.find(findElement);\r\n  \r\n      result.push(RomanArr[numberArr.indexOf(nextHighest)]);\r\n      num -= nextHighest;\r\n    }\r\n    let newResult = result.join(\"\");\r\n  \r\n    return newResult;\r\n  }\r\n  \r\n  export default convertToRoman;\r\n  ","function convertFromRoman (str) {\r\n    \r\n        const roman = { I: 1, V: 5, X: 10, L: 50, C: 100, D: 500, M: 1000 };\r\n        let num = 0;\r\n        for (let i = 0; i < str.length; i++) {\r\n          const curr = roman[str[i]];\r\n          const next = roman[str[i + 1]];\r\n          (curr < next) ? (num -= curr) : (num += curr);\r\n        }\r\n        return num;\r\n      };\r\n  \r\n  export default convertFromRoman;\r\n  ","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport ConvertInput from \"./Input\";\r\nimport ConvertOutput from \"./Output\";\r\nimport convertToRoman from \"./convertToRoman\";\r\nimport convertFromRoman from \"./convertFromRoman\";\r\n\r\nimport \"./index.css\";\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      output: \"\"\r\n    };\r\n    this.handleInput = this.handleInput.bind(this);\r\n  }\r\n\r\n\r\n  handleInput(e) {\r\n    this.setState({\r\n      output: convertToRoman(e.target.value) || convertFromRoman(e.target.value)\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App container\">\r\n        <h1 className=\"label\">Convert Number To Roman</h1>\r\n        <ConvertInput onChange={this.handleInput} />\r\n        <ConvertOutput value={this.state.output} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n\r\n"],"sourceRoot":""}